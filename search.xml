<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[数据库学习(持续更新中···)]]></title>
    <url>%2F2019%2F05%2F29%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD%C2%B7%C2%B7%C2%B7%2F</url>
    <content type="text"><![CDATA[数据库简介 关系型数据库： 基于E-R模型（实体-关系） 使用sql语句进行操作 分类：文档型（sqlite：移动终端）、服务型 数据库设计： 三范式：列不可拆分（数据拆到不能再拆，具体问题具体分析）、唯一标识（保证唯一性）、引用主键（引用唯一标识建立关系）； 关系及储存： 1对1：一个对象A对应一个对象B，一个对象B对应一个对象A eg：一个班级只有一个学生，一个学生对应着一个班级。则关系可以存入A或B对象中都可以； 1对多：一个对象A对应着n个对象B，一个对象B对应着一个对象A eg：一个班级有n个学生，一个学生对应着一个班级。则关系存入B对象（多）； 多对多：一个对象A对应n个对象B，一个对象B对应m个对象A 。则新建表AB，专门存关系，用标识填充数据。 数据库语法基本语句 入门 连接服务器 ：mysql -u 用户名 -p 密码 查看所有库： show database 选库语句：use 库名； 查看库下的表：show tables； 查看表结构：desc class； 创建数据库：create database 库名 charset utf8； 删除数据库：drop database 库名； MySQL中表、列可以改名，database不能改名 建表：create table stu（Snum int，Sname varchar(10)) engine myisam charset utf8; 删除表：drop table stu； 给表改名：rename table stu to newstu; 插入语句：insert into stu values (1,&#39;zhangsan&#39;),(2,&#39;lisi&#39;),(3,&#39;wangwu&#39;); 查询语句：select * from stu； 清空表数据：truncate stu； 增删改查(基本) 建表：CREATE语句 123456789CREATE TABLE `test`.`class` (`id` int(255) NOT NULL AUTO_INCREMENT,`sname` varchar(10) CHARACTER SET utf8 NOT NULL DEFAULT &apos;&apos;,`gender` char(1) CHARACTER SET utf8 NOT NULL DEFAULT &apos;&apos;,`company` varchar(20) CHARACTER SET utf8 NOT NULL DEFAULT &apos;&apos;,`salary` decimal(6, 2) NOT NULL DEFAULT &apos;&apos;,`fanbu` smallint(20) NOT NULL DEFAULT &apos;&apos;,PRIMARY KEY (`id`)); 添加语句：INSERT语句 1INSERT INTO `test`.`class`(`sname`, `gender`, `salary`, `fanbu`) VALUES (&apos;李四&apos;, &apos;男&apos;, 5000.00, 200)； 如果插入所有列，则可以不声明列名：INSERT INTO test.class VALUES (3,’zlatan’, ‘男’,’Blibli’ ,8000.00, 500);注意：id虽然为自增型，但是插入的时候还是要写，或者写null占位；插入多行用逗号隔开； 修改语句：UPDATE语句12update 表名 set 列1=新值，列2=新值 where id=4；UPDATE test.class SET fanbu=159 WHERE &apos;gender&apos;=&apos;男&apos; AND &apos;salary&apos;&gt;8000.00; where 表达式为真则执行生效，不一定为id，一定要加生效行，不然这一列全改了，问题很严重 删除语句：DELETE1delete from class where salary&gt;8500 删除是指删除整行 查询语句：SELECT语句123select sname,fanbu from class where id=3; //取部分列，单行；select *from class //取所有行所有列，*代表所有列，表名后不加where条件，则选所有行；select sanme，fanbu from class //取部分列，所有行； 字段类型（建表用）列类型：不同的列类型，所占据的空间和效率是不一样的，主要讨论列类型的存储范围与占据字节的关系 整型int系列声明时的参数（M）、unsigned 、zeroFill MySQL还支持选择在该类型关键字后面的括号内指定整数值的显示宽度(例如，INT(4))。该可选显示宽度规定用于显示宽度小于指定的列宽度的值时从左侧填满宽度。显示宽度并不限制可以在列内保存的值的范围，也不限制超过列的指定宽度的值的显示。 不加特殊说明时，默认有符号；加unsigned表示无符号，可以影响存储范围；M必需配合zeroFill使用才有意义：M表示补零宽度，和zerofill一起使用（保证位数相同），zerofill默认是unsigned类型；如添加一列类型为smallint的字段：alter table cd add num smallint(5) zerofill not null default 0 浮点型float（M，D）；decimal（M，D）M 叫标度—-&gt;代表总位数、D是精度—-&gt;代表小数点右边后的位数；decimal精度更高，float有时候会损失精度； 字符型 日期、时间类型 建表实战社交网站会员表 member 进阶语句对列的操作(alter table) 加一列在表的最后：alter table 表名 add 列名称 列类型 列参数； 加一列在指定列后：alter table 表名 add 列名称 列类型 列参数 after 某列； 加一列在表的最前面：alter table 表名 add 列名称 列类型 列参数 first； 删除列：alter table 表名 drop 列名； 修改列：alter table 表名 modify 列名 列类型 列参数----------modify不能改列名，要用change； 修改列名和列参数：alter table 表名 change 旧列名 新列名 列类型 列参数；查询语句(select) 查询模型： 列看成变量，where后面跟的是表达式，定位到列，一行一行的匹配判断，表达式为真则执行 既然是变量，就可以进行计算，即意味着可以组合成新的列进行查询显示 进阶查询 where条件查询 group by 分组 having 筛选 order by 排序 limit 限制结果条数 实战中练习商品表：goods字段：Goods_id、Cat_id、Goods_sn、Click_count、Goods_number、Market_price、Shop_price、Add_time、Is_best、Is_new、Is_hot把其他表的数据（shop.goods）插入到本表中(test.goods)1Insert into test.goods select Goods_id,Cat_id,Goods_sn,Click_count,Goods_number,Market_price,Shop_price,add_time,is_best,is_new,is_hot from shop.goods 基础查询where 1.1、查询商品主键为32的商品；Select goods_id,goods_name,shop_price from goods where goods_id=32; 1.2、不属于第3栏目的所有商品；Select goods_id,cat_id,goods_number from goods where cat_id !=3; !=等价于&lt;&gt; 1.3、本店价格高于和等于3000的商品；Select goods_id,goods_name,shop_price from goods where Shop_price&gt;=3000; 1.4、取出第4栏目和第11栏目的商品；Select goods_id,goods_name,shop_price from goods where cat_id in (4,11); //cat_id在4，11这个集合里都满足 1.4.1、取出不属于第3栏目且不属于第11栏目的商品；Select goods_id,goods_name,shop_price from goods where cat_id not in (3,11);Select goods_id,goods_name,shop_price from goods where cat_id !=3 and cat_id !=11 ; 1.5、取出价格在100到500之间的商品；Select goods_id,goods_name,shop_price from goods where Shop_price between 100 and 500； 1.6、取出价格大于100且小于300，或者大于4000且小于5000的商品；Select goods_id,goods_name,shop_price from goods where shop_price&gt;100 and shop_price&lt;300 or shop_price&gt;4000 and shop_price&lt;5000; //and优先级比or高 1.7、取出第3个栏目下价格小于1000或者大于3000，同时点击量大于等于5的商品；Select goods_id,goods_name,shop_price,click_count from goods where cat_id=3 and (shop_price&lt;1000 or shop_price&gt;3000) and click_count&gt;=5; 1.8、查出以“诺基亚”开头的商品；#模糊查询；Select goods_id,goods_name,shop_price,click_count from goods where goods_name like &#39;诺基亚%&#39;; //其中“%”能取出任意字符，“_”匹配单一字符Select goods_id,goods_name,shop_price,click_count from goods where goods_name like &#39;诺基亚N__&#39;; //查出诺基亚N加两个字符的商品 1.9、查出本店价格比市场价格的差值；Select goods_id,goods_name,market_price-shop_price from goods;Select goods_id,goods_name,(market_price-shop_price) as discount from goods; //以discount 显示Select goods_id,goods_name,(market_price-shop_price) as discount from goods where (market_price-shop_price)&gt;200; //查出差值大于200商品，where后不能是discount 练习题：有如下表和数组，把num值处于[20,29]之间，改为20，num值处于[30,39]之间的，改为30； 把num当成变量看，num/10取整，再乘以10 Update table set num=floor(num/10)*10 where num&gt;=20 and num&lt;=39;]]></content>
      <categories>
        <category>数据库</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>MySQL</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十大经典排序算法]]></title>
    <url>%2F2019%2F05%2F28%2F%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[十大经典排序算法排序算法是《数据结构与算法》中最基本的算法之一。排序算法可以分为内部排序和外部排序，内部排序是数据记录在内存中进行排序，而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。常见的内部排序算法有：插入排序、希尔排序、选择排序、冒泡排序、归并排序、快速排序、堆排序、基数排序等。用一张图概括： 关于时间复杂度： 平方阶 (O(n2)) 排序 各类简单排序：直接插入、直接选择和冒泡排序。 线性对数阶 (O(nlog2n)) 排序 快速排序、堆排序和归并排序； O(n1+§)) 排序，§ 是介于 0 和 1 之间的常数。 希尔排序 线性阶 (O(n)) 排序 基数排序，此外还有桶、箱排序。 关于稳定性： 稳定的排序算法：冒泡排序、插入排序、归并排序和基数排序。 不是稳定的排序算法：选择排序、快速排序、希尔排序、堆排序。 名词解释： n：数据规模 k：“桶”的个数 In-place：占用常数内存，不占用额外内存 Out-place：占用额外内存 稳定性：排序后 2 个相等键值的顺序和排序之前它们的顺序相同 GitBook 内容大纲 冒泡排序 选择排序 插入排序 希尔排序 归并排序 快速排序 堆排序 计数排序 桶排序 基数排序]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDownwn基本用法]]></title>
    <url>%2F2019%2F05%2F26%2FMarkDownwn%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[是什么md是一种标记语言，通过简单的标记语法，使得普通文本具有一定的格式。有专门的编辑器打开，但我使用的是VSCode，一款很强大的编辑器，必备工具。 怎么用 文本语法 标题：用#来标志，#越多，标题等级越低； 斜体：*斜体*； 粗体：**粗体**； 斜体加粗：*** 斜体加粗 *** ； 高亮：==高亮==； 删除线：删除线； 分割线：三个—或者三个***； 引用：用&gt;即可 ; 代码 代码行：反括号(tab上面的键) print(hello world) 代码块：用三个反括号包起来123public void main()&#123; system.out.printin(&quot;hello&quot;);&#125; 列表 无序列表：用 * 或 + 或 - 都行，推荐用星号，注意符号后面有空格 1 无序列表1 2 无序列表2 3 无序列表3 有序列表：数字. 列表名即可，如：1.有序列表 有序列表1 有序列表2 有序列表3特别注意，有序列表的序号是根据第一行列表的数字顺序来的 链接 超链接行内式：[超链接名](超链接地址 &quot;超链接title&quot;)参数式：[超链接名]：超链接地址 &quot;超链接title&quot;示例：百度一下 图片行内式：![图片描述](图片地址 &#39;&#39;图片title&#39;&#39;)参数试：[图片描述]：图片地址 &#39;&#39;图片title&#39;&#39; 表格 1234表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容 注：第二行分割表头和内容。有一个就行，为了对齐，多加了几个。文字默认居左；两边加：表示文字居中；右边加：表示文字居右。 防坑1. 点(.)后面要加空格； 2. #后面要加空格； 3. 关键字符转义输出，需在关键字**前**加反斜杠\。]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[初衷]]></title>
    <url>%2F2019%2F05%2F26%2F%E5%88%9D%E8%A1%B7%2F</url>
    <content type="text"><![CDATA[之前用Onenote，断断续续，零零散散记过一些笔记。希望这个blog能让我坚持下去。swag~ 经常会遇到一些问题，百度过后下次遇到继续百度，自己记录下来下次就好办多了 ^-^网上的回答需要自己整理，可靠性更强 ^^听说坚持记笔记，是一件很cool的事情 ^^]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>感想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客搭建之路]]></title>
    <url>%2F2019%2F05%2F25%2FHexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[搭建远程博客三要素搭建个人博客=域名(外网可访问的地址)+外网服务器(外网存储文件图片的地方)+解析(本地与服务器做映射) Hexo是什么Hexo是基于JS的一个静态博客框架。静态博客：没有后端数据库加持，意味着页面上无功能模块，只能通过修改代码来修改页面功能和效果。所有文章以.md文件存储在本地电脑上。 安装Hexo框架 安装Git 安装Node.js直接去官网下载安装即可。安装完成后在命令终端输入git -vnode -vnpm -v 来检查是否安装配置成功说明：Node.js安装成功后，同时会自动安装一个包管理器，称为npm（Node Package Manager）。 npm是什么？npm是一个包管理器，发布者将自己的代码发布（npm publish）到代码仓库（registry），使用者将自己需要的包写入package.json文件中，到代码仓库中把代码下载（npm install）下来。 磁盘中新建一个文件夹Hexo/blog,我的是/d/Hexo/blog，这个路径就是以后启动 Git Bash here 的地方，以后出了问题也可以把blog文件夹下的 内容全部干掉重来。 输入如下命令：npm install -g cnpm --registry=https://registry.npm.taobao.org 完成后输入：cnpm -v 检查是否安装成功 由于npm代码仓库的服务器在国外，由于Great Firewall的缘故，下载速度可能不尽如人意，这时你可以使用淘宝的npm代码仓库，通过npm安装cnpm 下载Hexo框架到/d/Hexo/blog目录下输入命令：cnpm install -g hexo-cli 等待下载完成 本地使用 以下命令的执行路径全部都是/d/Hexo/blog 初始化一个博客，命令行输入hexo init 新建一篇博客，命令行输入hexo n &quot;我的第一篇博客&quot;这时在D:\Hexo\blog\source_posts下会生成一个我的第一篇博客.md文件，用编辑器打开即可写文章。 清理博客文件hexo clean 生成博客文件hexo g (g是generate) 启动博客文件hexo s (s是server，默认端口号是4000) 打开浏览器输入 http://localhost:4000 即可看到一个博客页面 以后修改完配置文件和写好文章后在本地 启动博客的一个流程都是123hexo cleanhexo ghexo s 远程部署一、本地+Github白嫖 生成github.io 仓库登录 github 创建仓库，仓库名称必须是 你的github账号名称.github.io 下载git部署插件，/Hexo/blog路径下命令行输入cnpm install --save hexo-deployer-git 修改站点配置_config.yaml文件deploy属性下修改为： 1234deploy: type: git repo: https://github.com/TIARAluan/TIARAluan.github.io.git branch: master 在之前本地启动的基础上加上一句 hexo d 将博客文件推到新建的github仓库中去 1234hexo cleanhexo ghexo dhexo s 部署成功后，浏览器输入 http://你的github账号名称.github.io 即可享用啦 二、买域名+租服务器]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Node.js</tag>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
